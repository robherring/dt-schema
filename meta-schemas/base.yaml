# SPDX-License-Identifier: BSD-2-Clause
# Copyright 2018 Linaro Ltd.
# Copyright 2018 Arm Ltd.
%YAML 1.2
---
$id: "http://devicetree.org/meta-schemas/base.yaml#"
$schema: "http://json-schema.org/draft/2020-12/schema"
description: "Metaschema for devicetree binding documentation"

allOf:
  - $ref: "http://json-schema.org/draft-07/schema#"
  - $ref: "http://devicetree.org/meta-schemas/keywords.yaml#"

properties:
  # listing all properties here to narrow the scope of what is allowed in
  # devicetree schema files. This list can be relaxed in the future as we
  # become more comfortable with the validation vocabulary.
  # Also, being explicit about what properties are allowed helps to catch
  # misspelled or unsupported tests.
  $id:
    pattern: 'http://devicetree.org/schemas/.*\.yaml#'
  $schema:
    enum:
      - "http://devicetree.org/meta-schemas/core.yaml#"
      - "http://devicetree.org/meta-schemas/base.yaml#"
  title:
    maxLength: 100
  examples:
    type: array
    items:
      type: string

  maintainers:
    type: array
    items:
      type: string
      format: email

  select:
    description: '"select" must contain a valid json-schema'
    allOf:
      - $ref: "http://json-schema.org/draft/2020-12/schema#"
      - oneOf:
          - type: object
            properties:
              properties: true
              required: true
          - type: boolean

propertyNames:
  enum: [ $id, $schema, title, description, examples, required, allOf, anyOf, oneOf,
          definitions, $defs, additionalProperties, dependencies, patternProperties,
          properties, if, then, else, unevaluatedProperties, deprecated, maintainers,
          select ]

required:
  - $id
  - $schema
  - title
  - maintainers

if:
  oneOf:
    - properties:
        allOf:
          contains:
            required:
              - $ref
      required:
        - allOf
    - required:
        - $ref
then:
  description:
    'A schema with a "$ref" to another schema either can define all properties used and
    use "additionalProperties" or can use "unevaluatedProperties"'
  oneOf:
    - required:
        - unevaluatedProperties
    - required:
        - additionalProperties
else:
  description:
    'A schema without a "$ref" to another schema must define all properties and
    use "additionalProperties"'
  required:
    - additionalProperties
